import React, { useState } from "react";
import { motion } from "framer-motion";
import logo1 from "../assets/logo-1.png";

export default function AdnoxyBillboardSuggestForm() {
  const [form, setForm] = useState({
    brandName: "",
    brandUrl: "",
    location: "",
    budgeted: "",
    description: "",
  });

  const [errors, setErrors] = useState({});
  const [submitted, setSubmitted] = useState(false);
  const [loading, setLoading] = useState(false);

  function validate(values) {
    const e = {};
    if (!values.brandName.trim()) e.brandName = "Brand name is required.";
    if (!values.brandUrl.trim()) e.brandUrl = "Brand URL is required.";
    else {
      try {
        const url = new URL(values.brandUrl);
        if (!["http:", "https:"].includes(url.protocol)) {
          e.brandUrl = "Enter a valid http(s) URL.";
        }
      } catch (err) {
        e.brandUrl = "Enter a valid URL (example: https://example.com).";
      }
    }
    if (!values.location.trim()) e.location = "Location is required.";
    if (!values.budgeted.toString().trim()) e.budgeted = "Budget is required.";
    else if (isNaN(Number(values.budgeted)) || Number(values.budgeted) < 0)
      e.budgeted = "Enter a valid non-negative number.";
    if (!values.description.trim()) e.description = "Short description is required.";
    else if (values.description.length > 1000)
      e.description = "Description must be under 1000 characters.";
    return e;
  }

  function handleChange(e) {
    const { name, value } = e.target;
    setForm((s) => ({ ...s, [name]: value }));
    setErrors((prev) => ({ ...prev, [name]: undefined }));
  }

  function handleSubmit(e) {
    e.preventDefault();
    const v = validate(form);
    setErrors(v);
    if (Object.keys(v).length === 0) {
      setLoading(true);
      console.log("Submitting suggestion:", form);
      setTimeout(() => {
        setSubmitted(true);
        setLoading(false);
        setForm({ brandName: "", brandUrl: "", location: "", budgeted: "", description: "" });
      }, 1500);
    } else {
      setSubmitted(false);
    }
  }

  return (
    <div className="min-h-screen bg-gray-50 p-6 flex flex-col items-center">
      {/* Fixed Header with Logo */}
      <header className="w-full flex items-center justify-center mb-6 sticky top-0 bg-gray-50 py-4 shadow-sm z-10">
        <img src={logo1} alt="Adnoxy Logo" className="h-12" />
      </header>

      <div className="max-w-5xl w-full grid grid-cols-1 lg:grid-cols-2 gap-6">
        <motion.form
          initial={{ opacity: 0, translateY: 8 }}
          animate={{ opacity: 1, translateY: 0 }}
          onSubmit={handleSubmit}
          className="bg-white p-6 rounded-2xl shadow-md space-y-6"
          aria-label="Adnoxy billboard suggestion form"
        >
          <header>
            <h1 className="text-2xl font-semibold">Suggest a Billboard</h1>
            <p className="mt-1 text-sm text-gray-500">Tell us about the brand and campaign details.</p>
          </header>

          {/* Rest of the form fields remain unchanged */}

          <div className="flex items-center gap-3">
            <button
              type="submit"
              disabled={loading}
              className={`px-4 py-2 rounded-xl font-medium shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-300 text-white ${loading ? 'bg-indigo-400 cursor-not-allowed' : 'bg-indigo-600 hover:bg-indigo-700'}`}
            >
              {loading ? (
                <div className="flex items-center gap-2">
                  <svg className="animate-spin h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                    <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                    <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4a4 4 0 00-4 4H4z"></path>
                  </svg>
                  Submitting...
                </div>
              ) : (
                "Submit Suggestion"
              )}
            </button>

            <button
              type="button"
              onClick={() => { setForm({ brandName: "", brandUrl: "", location: "", budgeted: "", description: "" }); setErrors({}); setSubmitted(false); setLoading(false); }}
              className="px-3 py-2 rounded-xl bg-gray-100 text-gray-700 font-medium hover:bg-gray-200"
            >
              Reset
            </button>

            {submitted && !loading && <span className="ml-2 text-sm text-green-600">Suggestion submitted ✓</span>}
          </div>

          <footer className="text-xs text-gray-400">We only collect this info to suggest billboards — no spam. Make sure the URL is reachable.</footer>
        </motion.form>

        {/* Right side preview and notes remain unchanged */}
      </div>
    </div>
  );
}
